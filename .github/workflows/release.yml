name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write   # needed to push commits + tags + releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install ccache
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ccache
          ccache --version
          ccache --max-size=2G

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Cache Nuitka
        uses: actions/cache@v4
        with:
          path: ~/.cache/nuitka
          key: ${{ runner.os }}-nuitka-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-nuitka-

      - name: Install dependencies
        run: pip install python-semantic-release nuitka

      # Step 1: Run semantic-release to bump version, tag, changelog, release
      - name: Run semantic-release
        id: semrel
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release -vv publish

      # Step 2: Build binary with Nuitka (after version bump)
      - name: Build binary with Nuitka
        env:
          NUITKA_CACHE_DIR: ~/.cache/nuitka
        run: |
          mkdir -p dist
          VERSION=$(git describe --tags --abbrev=0)
          BASENAME="sentinel-linux-x86_64-${VERSION#v}"
          echo "Building Sentinel version $VERSION -> $BASENAME"
          python -m nuitka \
            --onefile \
            --standalone \
            --lto=yes \
            --static-libpython=yes \
            --output-filename=$BASENAME \
            sentinel.py
          strip $BASENAME
          mv $BASENAME dist/
          ls -lh dist/