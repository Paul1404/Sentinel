name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Force branch to workflow sha
        run: git reset --hard ${{ github.sha }}

      - name: Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"
          verbosity: 2

      # -------------------------------
      # Cache pip dependencies (Nuitka, etc.)
      # -------------------------------
      - name: Cache pip
        if: steps.release.outputs.released == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # -------------------------------
      # Cache Nuitka compilation cache
      # -------------------------------
      - name: Cache Nuitka
        if: steps.release.outputs.released == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/Nuitka
          key: ${{ runner.os }}-nuitka-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-nuitka-

      # -------------------------------
      # Cache ccache
      # -------------------------------
      - name: Cache ccache
        if: steps.release.outputs.released == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Install build tools
        if: steps.release.outputs.released == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ccache g++ zlib1g-dev
          ccache --max-size=2G
          ccache --version

      - name: Install Nuitka
        if: steps.release.outputs.released == 'true'
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install nuitka

      - name: Build binary with Nuitka (manylinux_2_28, Python 3.12)
        if: steps.release.outputs.released == 'true'
        uses: addnab/docker-run-action@v3
        with:
          image: quay.io/pypa/manylinux_2_28_x86_64
          options: -v ${{ github.workspace }}:/workspace
          run: |
            cd /workspace

            # Use Python 3.12 from manylinux
            /opt/python/cp312-cp312/bin/python -m venv venv
            source venv/bin/activate

            # Install build tools
            pip install --upgrade pip wheel setuptools nuitka

            # Build binary
            VERSION=${{ steps.release.outputs.version }}
            BASENAME="sentinel-linux-x86_64-${VERSION}"
            echo "Building Sentinel version $VERSION -> $BASENAME"

            python -m nuitka \
              --onefile \
              --standalone \
              --lto=yes \
              --output-filename=$BASENAME \
              sentinel.py

            mkdir -p dist
            mv $BASENAME dist/
            ls -lh dist/

      - name: Publish binary to GitHub Release
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/publish-action@v10.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
